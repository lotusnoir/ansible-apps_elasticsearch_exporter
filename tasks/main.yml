---
- name: "End play if distribution not suported"
  meta: end_host
  when:
    - ansible_distribution != "Debian"
    - ansible_distribution != "Ubuntu"
    - ansible_distribution != "CentOS"

- name: "Check for elasticsearch_exporter binary"
  stat:
    path: "{{ es_exporter_install_dir }}/elasticsearch-exporter"
  changed_when: false
  register: elasticsearch_exporter_install

- when: not elasticsearch_exporter_install.stat.exists or es_exporter_force_install|bool
  block:
    - name: "Download elasticsearch_exporter..."
      get_url:
        url: '{{ es_exporter_tgz_url }}'
        dest: '{{ es_exporter_temp_dir }}/{{ es_exporter_tgz }}'
        timeout: 60
        mode: '0644'

    - name: "Ensure install directory exists"
      file:
        path: '{{ item }}'
        state: directory
        mode: '0755'
      with_items:
        - '{{ es_exporter_install_dir }}'
        - '{{ es_exporter_temp_dir }}/es_exporter'

    - name: "Unarchive elasticsearch_exporter..."
      unarchive:
        src: '{{ es_exporter_temp_dir }}/{{ es_exporter_tgz }}'
        dest: '{{ es_exporter_temp_dir }}/es_exporter'
        remote_src: true
        extra_opts: [--strip-components=1]
        mode: '0644'

    - name: "Copy elasticsearch_exporter binary..."
      copy:
        src: '{{ es_exporter_temp_dir }}/es_exporter/elasticsearch_exporter'
        dest: '{{ es_exporter_install_dir }}/elasticsearch-exporter'
        remote_src: true
        mode: '0755'

    - name: "Remove temporary directory"
      file:
        path: '{{ es_exporter_temp_dir }}/es_exporter'
        state: absent

- name: "Create systemd for elasticsearch_exporter"
  template:
    src: 'elasticsearch_exporter.service.j2'
    dest: '/etc/systemd/system/elasticsearch_exporter.service'
    mode: '0640'
  notify: "restart elasticsearch_exporter"

- name: "Enable and Start elasticsearch_exporter.service"
  systemd:
    name: elasticsearch_exporter
    state: started
    enabled: true
    daemon_reload: true
